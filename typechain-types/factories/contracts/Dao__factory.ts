/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Dao, DaoInterface } from "../../contracts/Dao";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_chairman",
        type: "address",
      },
      {
        internalType: "address",
        name: "_voteToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minimumQuorum",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_debatePeriodDuration",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "ReferendumCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "decision",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "successCall",
        type: "bool",
      },
    ],
    name: "ReferendumEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "accept",
        type: "bool",
      },
    ],
    name: "VoteMade",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_callData",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "addProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "endVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_accept",
        type: "bool",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001b6838038062001b688339818101604052810190620000379190620000fe565b836000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816002819055508060038190555050505050620001dc565b600081519050620000e181620001a8565b92915050565b600081519050620000f881620001c2565b92915050565b600080600080608085870312156200011557600080fd5b60006200012587828801620000d0565b94505060206200013887828801620000d0565b93505060406200014b87828801620000e7565b92505060606200015e87828801620000e7565b91505092959194509250565b600062000177826200017e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620001b3816200016a565b8114620001bf57600080fd5b50565b620001cd816200019e565b8114620001d957600080fd5b50565b61197c80620001ec6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632e1a7d4d1461005c578063865df0ad14610078578063b6b55f2514610094578063c9d27afe146100b0578063dc07aeb2146100cc575b600080fd5b61007660048036038101906100719190610e87565b6100e8565b005b610092600480360381019061008d9190610e87565b6102fd565b005b6100ae60048036038101906100a99190610e87565b61052f565b005b6100ca60048036038101906100c59190610eb0565b61063d565b005b6100e660048036038101906100e19190610e08565b610a08565b005b42600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101541061016c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610163906112eb565b60405180910390fd5b80600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015410156101f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e89061126b565b60405180910390fd5b80600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825461024391906114c4565b92505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016102a79291906111a0565b602060405180830381600087803b1580156102c157600080fd5b505af11580156102d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f99190610ddf565b5050565b600454811115610342576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103399061128b565b60405180910390fd5b600060056000838152602001908152602001600020905080600301544210156103a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103979061136b565b60405180910390fd5b600254816005015482600401546103b7919061146e565b10156103f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ef9061138b565b60405180910390fd5b806005015481600401541415610443576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043a906112ab565b60405180910390fd5b600081600501548260040154119050600081156104ef578260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16836000016040516104a69190611152565b6000604051808303816000865af19150503d80600081146104e3576040519150601f19603f3d011682016040523d82523d6000602084013e6104e8565b606091505b5050809150505b837fa48b04c10a6f5493396e35ea4f09022ce2a8c459c4d301127d19d9c69af4efb48383604051610521929190611200565b60405180910390a250505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161058e93929190611169565b602060405180830381600087803b1580156105a857600080fd5b505af11580156105bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e09190610ddf565b5080600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254610633919061146e565b9250508190555050565b600454821115610682576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610679906112cb565b60405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052908160008201548152602001600182015481525050905060018160000151101561072c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107239061130b565b60405180910390fd5b60006005600085815260200190815260200160002090508060060160009054906101000a900460ff1615610795576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078c9061124b565b60405180910390fd5b6000806007600087815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156107fb57826000015190506108f4565b6007600086815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836000015111610891576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108889061134b565b60405180910390fd5b6007600086815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483600001516108f191906114c4565b90505b816003015483602001511161090d578160030154610913565b82602001515b836020018181525050806007600087815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461097c919061146e565b9250508190555083156109a9578082600401600082825461099d919061146e565b925050819055506109c5565b808260050160008282546109bd919061146e565b925050819055505b847f02af0c107a5637f760e05df98cc4eb27d8ffc12a0c6b557e1598ef05a27c65533383876040516109f9939291906111c9565b60405180910390a25050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a96576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8d9061132b565b60405180910390fd5b6000600560006004548152602001908152602001600020905083816000019080519060200190610ac7929190610b92565b50828160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081816002019080519060200190610b23929190610c18565b5060035442610b32919061146e565b81600301819055506004547f8d38a02f6ae3b6c7d49356dc5761e4d1b0d440e265ac0146623bbdc8565def9e83604051610b6c9190611229565b60405180910390a260046000815480929190610b87906115e5565b919050555050505050565b828054610b9e90611582565b90600052602060002090601f016020900481019282610bc05760008555610c07565b82601f10610bd957805160ff1916838001178555610c07565b82800160010185558215610c07579182015b82811115610c06578251825591602001919060010190610beb565b5b509050610c149190610c9e565b5090565b828054610c2490611582565b90600052602060002090601f016020900481019282610c465760008555610c8d565b82601f10610c5f57805160ff1916838001178555610c8d565b82800160010185558215610c8d579182015b82811115610c8c578251825591602001919060010190610c71565b5b509050610c9a9190610c9e565b5090565b5b80821115610cb7576000816000905550600101610c9f565b5090565b6000610cce610cc9846113d0565b6113ab565b905082815260208101848484011115610ce657600080fd5b610cf1848285611540565b509392505050565b6000610d0c610d0784611401565b6113ab565b905082815260208101848484011115610d2457600080fd5b610d2f848285611540565b509392505050565b600081359050610d4681611901565b92915050565b600081359050610d5b81611918565b92915050565b600081519050610d7081611918565b92915050565b600082601f830112610d8757600080fd5b8135610d97848260208601610cbb565b91505092915050565b600082601f830112610db157600080fd5b8135610dc1848260208601610cf9565b91505092915050565b600081359050610dd98161192f565b92915050565b600060208284031215610df157600080fd5b6000610dff84828501610d61565b91505092915050565b600080600060608486031215610e1d57600080fd5b600084013567ffffffffffffffff811115610e3757600080fd5b610e4386828701610d76565b9350506020610e5486828701610d37565b925050604084013567ffffffffffffffff811115610e7157600080fd5b610e7d86828701610da0565b9150509250925092565b600060208284031215610e9957600080fd5b6000610ea784828501610dca565b91505092915050565b60008060408385031215610ec357600080fd5b6000610ed185828601610dca565b9250506020610ee285828601610d4c565b9150509250929050565b610ef5816114f8565b82525050565b610f048161150a565b82525050565b60008154610f1781611582565b610f218186611452565b94506001821660008114610f3c5760018114610f4d57610f80565b60ff19831686528186019350610f80565b610f5685611432565b60005b83811015610f7857815481890152600182019150602081019050610f59565b838801955050505b50505092915050565b6000610f9482611447565b610f9e818561145d565b9350610fae81856020860161154f565b610fb7816116bb565b840191505092915050565b6000610fcf60198361145d565b9150610fda826116cc565b602082019050919050565b6000610ff260148361145d565b9150610ffd826116f5565b602082019050919050565b600061101560168361145d565b91506110208261171e565b602082019050919050565b600061103860108361145d565b915061104382611747565b602082019050919050565b600061105b60178361145d565b915061106682611770565b602082019050919050565b600061107e60208361145d565b915061108982611799565b602082019050919050565b60006110a160218361145d565b91506110ac826117c2565b604082019050919050565b60006110c460158361145d565b91506110cf82611811565b602082019050919050565b60006110e7601d8361145d565b91506110f28261183a565b602082019050919050565b600061110a60218361145d565b915061111582611863565b604082019050919050565b600061112d60238361145d565b9150611138826118b2565b604082019050919050565b61114c81611536565b82525050565b600061115e8284610f0a565b915081905092915050565b600060608201905061117e6000830186610eec565b61118b6020830185610eec565b6111986040830184611143565b949350505050565b60006040820190506111b56000830185610eec565b6111c26020830184611143565b9392505050565b60006060820190506111de6000830186610eec565b6111eb6020830185611143565b6111f86040830184610efb565b949350505050565b60006040820190506112156000830185610efb565b6112226020830184610efb565b9392505050565b600060208201905081810360008301526112438184610f89565b905092915050565b6000602082019050818103600083015261126481610fc2565b9050919050565b6000602082019050818103600083015261128481610fe5565b9050919050565b600060208201905081810360008301526112a481611008565b9050919050565b600060208201905081810360008301526112c48161102b565b9050919050565b600060208201905081810360008301526112e48161104e565b9050919050565b6000602082019050818103600083015261130481611071565b9050919050565b6000602082019050818103600083015261132481611094565b9050919050565b60006020820190508181036000830152611344816110b7565b9050919050565b60006020820190508181036000830152611364816110da565b9050919050565b60006020820190508181036000830152611384816110fd565b9050919050565b600060208201905081810360008301526113a481611120565b9050919050565b60006113b56113c6565b90506113c182826115b4565b919050565b6000604051905090565b600067ffffffffffffffff8211156113eb576113ea61168c565b5b6113f4826116bb565b9050602081019050919050565b600067ffffffffffffffff82111561141c5761141b61168c565b5b611425826116bb565b9050602081019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600061147982611536565b915061148483611536565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156114b9576114b861162e565b5b828201905092915050565b60006114cf82611536565b91506114da83611536565b9250828210156114ed576114ec61162e565b5b828203905092915050565b600061150382611516565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561156d578082015181840152602081019050611552565b8381111561157c576000848401525b50505050565b6000600282049050600182168061159a57607f821691505b602082108114156115ae576115ad61165d565b5b50919050565b6115bd826116bb565b810181811067ffffffffffffffff821117156115dc576115db61168c565b5b80604052505050565b60006115f082611536565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156116235761162261162e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f5265666572656e64756d20616c726561647920656e6465642e00000000000000600082015250565b7f596f75206465706f736974206973206c6573732e000000000000000000000000600082015250565b7f57726f6e67206964207761732070726f76696465642e00000000000000000000600082015250565b7f506172697479206f6620766f7465732e00000000000000000000000000000000600082015250565b7f57726f6e67205f6964207761732070726f76696465642e000000000000000000600082015250565b7f596f752066756e647320617265206c6f636b65642c20747279206c617465722e600082015250565b7f506c65617365207472616e7366657220736f6d652066756e647320666972737460008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b7f596f7520617265206e6f742063686169726d616e2e0000000000000000000000600082015250565b7f596f7520616c7265616479207573656420616c6c2062616c616e63652e000000600082015250565b7f5265666572656e64756d2063616e206e6f7420656e64207269676874206e6f7760008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b7f4d696e696d756d2071756f72756d20726571756972656d656e74206e6f74206d60008201527f65742e0000000000000000000000000000000000000000000000000000000000602082015250565b61190a816114f8565b811461191557600080fd5b50565b6119218161150a565b811461192c57600080fd5b50565b61193881611536565b811461194357600080fd5b5056fea2646970667358221220483cf71fed7da7a244db1bdd1295f19143b72a985886ba39f46d2c17bf13ec8c64736f6c63430008040033";

type DaoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DaoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Dao__factory extends ContractFactory {
  constructor(...args: DaoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _chairman: string,
    _voteToken: string,
    _minimumQuorum: BigNumberish,
    _debatePeriodDuration: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Dao> {
    return super.deploy(
      _chairman,
      _voteToken,
      _minimumQuorum,
      _debatePeriodDuration,
      overrides || {}
    ) as Promise<Dao>;
  }
  override getDeployTransaction(
    _chairman: string,
    _voteToken: string,
    _minimumQuorum: BigNumberish,
    _debatePeriodDuration: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _chairman,
      _voteToken,
      _minimumQuorum,
      _debatePeriodDuration,
      overrides || {}
    );
  }
  override attach(address: string): Dao {
    return super.attach(address) as Dao;
  }
  override connect(signer: Signer): Dao__factory {
    return super.connect(signer) as Dao__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DaoInterface {
    return new utils.Interface(_abi) as DaoInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Dao {
    return new Contract(address, _abi, signerOrProvider) as Dao;
  }
}
