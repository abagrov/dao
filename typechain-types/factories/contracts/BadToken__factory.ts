/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BadToken, BadTokenInterface } from "../../contracts/BadToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "changeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600981526020017f42616420546f6b656e00000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f424144000000000000000000000000000000000000000000000000000000000081525081600390805190602001906200009692919062000298565b508060049080519060200190620000af92919062000298565b50505033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200010f3369152d02c7e14af68000006200011560201b60201c565b620004f4565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000188576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200017f9062000380565b60405180910390fd5b6200019c600083836200028e60201b60201c565b8060026000828254620001b09190620003d0565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620002079190620003d0565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200026e9190620003a2565b60405180910390a36200028a600083836200029360201b60201c565b5050565b505050565b505050565b828054620002a69062000437565b90600052602060002090601f016020900481019282620002ca576000855562000316565b82601f10620002e557805160ff191683800117855562000316565b8280016001018555821562000316579182015b8281111562000315578251825591602001919060010190620002f8565b5b50905062000325919062000329565b5090565b5b80821115620003445760008160009055506001016200032a565b5090565b600062000357601f83620003bf565b91506200036482620004cb565b602082019050919050565b6200037a816200042d565b82525050565b600060208201905081810360008301526200039b8162000348565b9050919050565b6000602082019050620003b960008301846200036f565b92915050565b600082825260208201905092915050565b6000620003dd826200042d565b9150620003ea836200042d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200042257620004216200046d565b5b828201905092915050565b6000819050919050565b600060028204905060018216806200045057607f821691505b602082108114156200046757620004666200049c565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b611a5f80620005046000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a457c2d711610066578063a457c2d71461025f578063a6f9dae11461028f578063a9059cbb146102ab578063dd62ed3e146102db576100ea565b806370a08231146101f557806395d89b41146102255780639dc29fac14610243576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806339509351146101a957806340c10f19146101d9576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f761030b565b6040516101049190611381565b60405180910390f35b61012760048036038101906101229190611143565b61039d565b6040516101349190611366565b60405180910390f35b6101456103c0565b6040516101529190611503565b60405180910390f35b610175600480360381019061017091906110f4565b6103ca565b6040516101829190611366565b60405180910390f35b6101936103f9565b6040516101a0919061151e565b60405180910390f35b6101c360048036038101906101be9190611143565b610402565b6040516101d09190611366565b60405180910390f35b6101f360048036038101906101ee9190611143565b610439565b005b61020f600480360381019061020a919061108f565b6104d7565b60405161021c9190611503565b60405180910390f35b61022d61051f565b60405161023a9190611381565b60405180910390f35b61025d60048036038101906102589190611143565b6105b1565b005b61027960048036038101906102749190611143565b61064f565b6040516102869190611366565b60405180910390f35b6102a960048036038101906102a4919061108f565b6106c6565b005b6102c560048036038101906102c09190611143565b61079a565b6040516102d29190611366565b60405180910390f35b6102f560048036038101906102f091906110b8565b6107bd565b6040516103029190611503565b60405180910390f35b60606003805461031a90611667565b80601f016020809104026020016040519081016040528092919081815260200182805461034690611667565b80156103935780601f1061036857610100808354040283529160200191610393565b820191906000526020600020905b81548152906001019060200180831161037657829003601f168201915b5050505050905090565b6000806103a8610844565b90506103b581858561084c565b600191505092915050565b6000600254905090565b6000806103d5610844565b90506103e2858285610a17565b6103ed858585610aa3565b60019150509392505050565b60006012905090565b60008061040d610844565b905061042e81858561041f85896107bd565b6104299190611555565b61084c565b600191505092915050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c0906114a3565b60405180910390fd5b6104d38282610d24565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461052e90611667565b80601f016020809104026020016040519081016040528092919081815260200182805461055a90611667565b80156105a75780601f1061057c576101008083540402835291602001916105a7565b820191906000526020600020905b81548152906001019060200180831161058a57829003601f168201915b5050505050905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610641576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610638906114a3565b60405180910390fd5b61064b8282610e84565b5050565b60008061065a610844565b9050600061066882866107bd565b9050838110156106ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a4906114c3565b60405180910390fd5b6106ba828686840361084c565b60019250505092915050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610756576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074d906114a3565b60405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000806107a5610844565b90506107b2818585610aa3565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156108bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b390611483565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561092c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610923906113e3565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610a0a9190611503565b60405180910390a3505050565b6000610a2384846107bd565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a9d5781811015610a8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8690611403565b60405180910390fd5b610a9c848484840361084c565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0a90611463565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7a906113a3565b60405180910390fd5b610b8e83838361105b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0b90611423565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ca79190611555565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d0b9190611503565b60405180910390a3610d1e848484611060565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8b906114e3565b60405180910390fd5b610da06000838361105b565b8060026000828254610db29190611555565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e079190611555565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e6c9190611503565b60405180910390a3610e8060008383611060565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ef4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eeb90611443565b60405180910390fd5b610f008260008361105b565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610f86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7d906113c3565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160026000828254610fdd91906115ab565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110429190611503565b60405180910390a361105683600084611060565b505050565b505050565b505050565b600081359050611074816119fb565b92915050565b60008135905061108981611a12565b92915050565b6000602082840312156110a157600080fd5b60006110af84828501611065565b91505092915050565b600080604083850312156110cb57600080fd5b60006110d985828601611065565b92505060206110ea85828601611065565b9150509250929050565b60008060006060848603121561110957600080fd5b600061111786828701611065565b935050602061112886828701611065565b92505060406111398682870161107a565b9150509250925092565b6000806040838503121561115657600080fd5b600061116485828601611065565b92505060206111758582860161107a565b9150509250929050565b611188816115f1565b82525050565b600061119982611539565b6111a38185611544565b93506111b3818560208601611634565b6111bc816116f7565b840191505092915050565b60006111d4602383611544565b91506111df82611708565b604082019050919050565b60006111f7602283611544565b915061120282611757565b604082019050919050565b600061121a602283611544565b9150611225826117a6565b604082019050919050565b600061123d601d83611544565b9150611248826117f5565b602082019050919050565b6000611260602683611544565b915061126b8261181e565b604082019050919050565b6000611283602183611544565b915061128e8261186d565b604082019050919050565b60006112a6602583611544565b91506112b1826118bc565b604082019050919050565b60006112c9602483611544565b91506112d48261190b565b604082019050919050565b60006112ec601683611544565b91506112f78261195a565b602082019050919050565b600061130f602583611544565b915061131a82611983565b604082019050919050565b6000611332601f83611544565b915061133d826119d2565b602082019050919050565b6113518161161d565b82525050565b61136081611627565b82525050565b600060208201905061137b600083018461117f565b92915050565b6000602082019050818103600083015261139b818461118e565b905092915050565b600060208201905081810360008301526113bc816111c7565b9050919050565b600060208201905081810360008301526113dc816111ea565b9050919050565b600060208201905081810360008301526113fc8161120d565b9050919050565b6000602082019050818103600083015261141c81611230565b9050919050565b6000602082019050818103600083015261143c81611253565b9050919050565b6000602082019050818103600083015261145c81611276565b9050919050565b6000602082019050818103600083015261147c81611299565b9050919050565b6000602082019050818103600083015261149c816112bc565b9050919050565b600060208201905081810360008301526114bc816112df565b9050919050565b600060208201905081810360008301526114dc81611302565b9050919050565b600060208201905081810360008301526114fc81611325565b9050919050565b60006020820190506115186000830184611348565b92915050565b60006020820190506115336000830184611357565b92915050565b600081519050919050565b600082825260208201905092915050565b60006115608261161d565b915061156b8361161d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156115a05761159f611699565b5b828201905092915050565b60006115b68261161d565b91506115c18361161d565b9250828210156115d4576115d3611699565b5b828203905092915050565b60006115ea826115fd565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611652578082015181840152602081019050611637565b83811115611661576000848401525b50505050565b6000600282049050600182168061167f57607f821691505b60208210811415611693576116926116c8565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f596f7520617265206e6f7420746865206f776e65722e00000000000000000000600082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b611a04816115df565b8114611a0f57600080fd5b50565b611a1b8161161d565b8114611a2657600080fd5b5056fea2646970667358221220844ed4aa234f543fb3cf44bc97039946d26741e3f3cef9579ec04b6f9786e76364736f6c63430008040033";

type BadTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BadTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BadToken__factory extends ContractFactory {
  constructor(...args: BadTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BadToken> {
    return super.deploy(overrides || {}) as Promise<BadToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BadToken {
    return super.attach(address) as BadToken;
  }
  override connect(signer: Signer): BadToken__factory {
    return super.connect(signer) as BadToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BadTokenInterface {
    return new utils.Interface(_abi) as BadTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BadToken {
    return new Contract(address, _abi, signerOrProvider) as BadToken;
  }
}
